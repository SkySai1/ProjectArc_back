openapi: 3.1.0
info:
  title: Project Description API
  description: API для работы с проектом (создание, обновление, удаление данных).
  version: 1.0.0
servers:
  - url: https://gpts.volutega.com/v2
    description: Основной сервер API
paths:
  /about/:
    get:
      operationId: getProjectDescription
      summary: Получение описания проекта.
      description: Возвращает JSON с описанием проекта, если файл описания существует.
      responses:
        "200":
          description: Успешное получение описания проекта.
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    description: Текст описания проекта.
                  created_at:
                    type: integer
                    format: int64
                    description: Дата создания (в формате Unix timestamp).
                  updated_at:
                    type: integer
                    format: int64
                    description: Дата последнего обновления (в формате Unix timestamp).
        "404":
          description: Файл описания отсутствует.
    post:
      operationId: createProjectDescription
      summary: Создание описания проекта.
      description: Создает файл описания проекта с указанным текстом.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - description
              properties:
                description:
                  type: string
                  description: Текст описания проекта.
      responses:
        "201":
          description: Описание проекта успешно создано.
        "400":
          description: Описание уже существует или отсутствует обязательный параметр.
    put:
      operationId: updateProjectDescription
      summary: Обновление описания проекта.
      description: Обновляет существующий файл описания проекта с новым текстом.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - description
              properties:
                description:
                  type: string
                  description: Новый текст описания проекта.
      responses:
        "200":
          description: Описание проекта успешно обновлено.
        "400":
          description: Отсутствует обязательный параметр.
        "404":
          description: Файл описания отсутствует.
  /files/create:
    post:
      operationId: createFile
      summary: Создание нового файла.
      description: Создает новый файл в проекте с указанными параметрами.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
                  description: Путь к создаваемому файлу.
                content:
                  type: string
                  description: Содержимое файла.
                description:
                  type: string
                  description: Описание файла.
      responses:
        "201":
          description: Файл успешно создан.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном создании файла.
        "400":
          description: Ошибки в параметрах или файл уже существует.
  /files/delete:
    post:
      operationId: deleteObject
      summary: Удаление файла или директории.
      description: Удаляет файл или директорию из проекта (включая рекурсивное удаление содержимого для директорий).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
                  description: Путь к удаляемому файлу или директории.
      responses:
        "200":
          description: Успешное удаление файла или директории.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном удалении файла или директории.
        "207":
          description: Удаление выполнено, но файл не найден в базе данных.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение о частичном удалении.
                  status:
                    type: string
                    description: Статус ошибки (например, "not_in_db").
        "404":
          description: Указанный путь не найден.
  /files/update:
    put:
      operationId: updateFile
      summary: Обновление содержимого и/или описания файла.
      description: Обновляет информацию или содержимое существующего файла.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
                  description: Путь к файлу.
                description:
                  type: string
                  description: Новое описание файла.
                content:
                  type: string
                  description: Новое содержимое файла.
      responses:
        "200":
          description: Файл успешно обновлен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном обновлении файла.
        "400":
          description: Ошибки в параметрах.
        "404":
          description: Файл не найден.
  /files/read:
    get:
      operationId: readFile
      summary: Чтение содержимого файла.
      description: Возвращает содержимое файла, его размер и время последнего изменения.
      parameters:
        - name: path
          in: query
          required: true
          description: Путь к читаемому файлу.
          schema:
            type: string
      responses:
        "200":
          description: Успешное получение содержимого файла.
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: Путь к файлу.
                  content:
                    type: string
                    description: Содержимое файла.
                  size:
                    type: integer
                    description: Размер файла в байтах.
                  last_modified:
                    type: integer
                    format: int64
                    description: Время последнего изменения (в формате Unix timestamp).
        "400":
          description: Ошибки в параметрах.
        "404":
          description: Файл не найден.

  /history/:
    get:
      operationId: getHistory
      summary: Получение истории изменений
      description: Возвращает список изменений из истории.
      responses:
        '200':
          description: JSON с историей изменений.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: integer
                      description: Метка времени изменения (UNIX timestamp).
                    description:
                      type: string
                      description: Описание изменения.
                    affected_files:
                      type: array
                      description: Список затронутых файлов.
                      items:
                        type: string
        '404':
          description: История изменений отсутствует.
    post:
      operationId: addHistory
      summary: Запись изменения в историю
      description: Добавляет новое изменение в историю.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - description
              properties:
                description:
                  type: string
                  description: Описание изменения.
                affected_files:
                  type: array
                  description: Список затронутых файлов.
                  items:
                    type: string
      responses:
        '201':
          description: Изменение успешно записано.
        '400':
          description: Отсутствует обязательный параметр `description`.


  /project_map/:
    get:
      operationId: getProjectMap
      summary: Получение карты проекта
      description: Возвращает карту проекта из базы данных.
      responses:
        '200':
          description: JSON с картой проекта.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      description: Путь к файлу.
                    type:
                      type: string
                      description: Тип элемента (например, файл).
                    description:
                      type: string
                      description: Описание файла.
                    size:
                      type: integer
                      description: Размер файла в байтах.
                    last_modified:
                      type: string
                      format: date-time
                      description: Дата последнего изменения файла.
        '500':
          description: Ошибка при получении данных.
    post:
      operationId: deleteProjectFile
      summary: Удаление записи о файле
      description: Удаляет запись о файле из карты проекта.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
                  description: Путь к удаляемому файлу.
      responses:
        '200':
          description: Запись успешно удалена.
        '400':
          description: Отсутствует обязательный параметр `path`.
        '404':
          description: Файл не найден в карте проекта.
    put:
      operationId: updateProjectFile
      summary: Обновление информации о файле
      description: Обновляет информацию о файле в карте проекта.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
                - description
              properties:
                path:
                  type: string
                  description: Путь к файлу.
                description:
                  type: string
                  description: Новое описание файла.
      responses:
        '200':
          description: Информация успешно обновлена.
        '400':
          description: Отсутствуют обязательные параметры.
        '404':
          description: Файл не найден в карте проекта.
        '500':
          description: Ошибка при обновлении данных.
  /project_map/sync:
    post:
      operationId: syncProjectFiles
      summary: Синхронизация файлов с картой проекта
      description: Проверяет существование файлов и добавляет их в СУБД.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  description: Массив объектов с информацией о файлах.
                  items:
                    type: object
                    required:
                      - path
                      - description
                    properties:
                      path:
                        type: string
                        description: Путь к файлу.
                      description:
                        type: string
                        description: Описание файла.
      responses:
        '200':
          description: Все файлы успешно синхронизированы.
        '207':
          description: Часть файлов не найдена, остальные успешно синхронизированы.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Описание результата синхронизации.
                  details:
                    type: object
                    properties:
                      synchronized:
                        type: array
                        items:
                          type: string
                        description: Список синхронизированных файлов.
                      not_found:
                        type: array
                        items:
                          type: string
                        description: Список ненайденных файлов.
        '404':
          description: Ни один файл не найден.
        '400':
          description: Некорректный формат запроса.
  /files/tree:
    get:
      operationId: getFileTree
      summary: Получение структуры файлов и папок.
      description: Возвращает дерево файлов и папок в указанной директории.
      parameters:
        - name: path
          in: query
          description: Относительный путь к директории (по умолчанию BASE_DIR).
          required: false
          schema:
            type: string
        - name: depth
          in: query
          description: Глубина обхода дерева (по умолчанию 3).
          required: false
          schema:
            type: integer
            default: 3
        - name: excluded_dirs
          in: query
          description: Список директорий для исключения из результата.
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: excluded_patterns
          in: query
          description: Паттерны для исключения директорий (например, "__pycache__").
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
      responses:
        '200':
          description: Возвращает дерево файлов и папок.
          content:
            application/json:
              schema:
                type: object
                properties:
                  directory:
                    type: string
                    description: Путь к указанной директории.
                  subdirectories:
                    type: array
                    items:
                      type: string
                    description: Список подкаталогов в директории.
                  files:
                    type: array
                    items:
                      type: string
                    description: Список файлов в директории.
        '400':
          description: Некорректный путь (например, выход за пределы BASE_DIR).
        '404':
          description: Указанный путь не существует.